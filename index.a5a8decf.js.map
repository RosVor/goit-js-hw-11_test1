{"mappings":"AACA,MAGMA,EAAaC,SAASC,eAAe,eACrCC,EAAUF,SAASG,cAAc,YACjCC,EAAcJ,SAASG,cAAc,cAE3C,IAAIE,EAAc,EACdC,EAAc,GAElB,MAAMC,EAAcC,MAAOC,EAAOC,KAChC,IACE,MAAMC,QAAiBC,MAAM,6HAAeH,UAAcC,KAC1D,IAAKC,EAASE,GACZ,MAAM,IAAIC,MAAM,+BAGlB,aADmBH,EAASI,M,CAE5B,MAAOC,GAEP,OADAC,QAAQD,MAAM,uBAAwBA,GAC/B,I,GAKLE,EAAoBC,IACxB,MAAMC,EAAYD,EAAOE,KAAKC,GAAU,mDAExBA,EAAMC,sBAAsBD,EAAME,iGAEPF,EAAMG,yDACNH,EAAMI,4DACHJ,EAAMK,gEACLL,EAAMM,gDAGlDC,KAAK,IAER3B,EAAQ4B,UAAYV,CAAS,EA8C/BrB,EAAWgC,iBAAiB,UA1CHvB,MAAOwB,IAC9BA,EAAMC,iBACN3B,EAAc0B,EAAME,OAAOC,YAAYC,MAAMC,OAC7ChC,EAAc,EAEd,MAAMiC,QAAa/B,EAAYD,EAAaD,GAExCiC,GAAQA,EAAKC,KAAKC,OAAS,GAC7BtB,EAAiBoB,EAAKC,MACtBnC,EAAYqC,MAAMC,QAAU,UAE5BxC,EAAQ4B,UAAY,GACpB1B,EAAYqC,MAAMC,QAAU,OAC5BC,MAAM,4E,IA8BVvC,EAAY2B,iBAAiB,SAzBDvB,UAC1BH,GAAe,EAEf,MAAMiC,QAAa/B,EAAYD,EAAaD,GAE5C,GAAIiC,GAAQA,EAAKC,KAAKC,OAAS,EAAG,CAChC,MAAMI,EAAYN,EAAKC,KACjBM,EAAgBC,MAAMC,KAAK7C,EAAQ8C,iBAAiB,gBACpDC,EAAe/B,EAAiB0B,GAEtC1C,EAAQgD,mBAAmB,YAAaD,GAExC,MAAME,EAAeN,EAAcL,OACbM,MAAMC,KAAK7C,EAAQ8C,iBAAiB,gBAAgBI,MAAMD,GAElE,GAAGE,eAAe,CAC9BC,SAAU,SACVC,MAAO,S,MAGTnD,EAAYqC,MAAMC,QAAU,OAC5BC,MAAM,6D","sources":["src/js/index.js"],"sourcesContent":["// API\nconst apiKey = '38418747-ec354076649bfa1b688ea2611';\nconst apiUrl = `https://pixabay.com/api/?key=${apiKey}&image_type=photo&orientation=horizontal&safesearch=true`;\n\nconst searchForm = document.getElementById('search-form');\nconst gallery = document.querySelector('.gallery');\nconst loadMoreBtn = document.querySelector('.load-more');\n\nlet currentPage = 1;\nlet searchQuery = '';\n// the API request\nconst fetchImages = async (query, page) => {\n  try {\n    const response = await fetch(`${apiUrl}&q=${query}&page=${page}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return null;\n  }\n};\n\n// render image cards\nconst renderImageCards = (images) => {\n  const cardsHTML = images.map((image) => `\n    <div class=\"photo-card\">\n      <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" />\n      <div class=\"info\">\n        <p class=\"info-item\"><b>Likes:</b> ${image.likes}</p>\n        <p class=\"info-item\"><b>Views:</b> ${image.views}</p>\n        <p class=\"info-item\"><b>Comments:</b> ${image.comments}</p>\n        <p class=\"info-item\"><b>Downloads:</b> ${image.downloads}</p>\n      </div>\n    </div>\n  `).join('');\n\n  gallery.innerHTML = cardsHTML;\n};\n\n// form submission\nconst handleFormSubmit = async (event) => {\n  event.preventDefault();\n  searchQuery = event.target.searchQuery.value.trim();\n  currentPage = 1;\n\n  const data = await fetchImages(searchQuery, currentPage);\n\n  if (data && data.hits.length > 0) {\n    renderImageCards(data.hits);\n    loadMoreBtn.style.display = 'block';\n  } else {\n    gallery.innerHTML = '';\n    loadMoreBtn.style.display = 'none';\n    alert('Sorry, there are no images matching your search query. Please try again.');\n  }\n};\n\n// \"Load more\" \nconst handleLoadMoreClick = async () => {\n  currentPage += 1;\n\n  const data = await fetchImages(searchQuery, currentPage);\n\n  if (data && data.hits.length > 0) {\n    const newImages = data.hits;\n    const currentImages = Array.from(gallery.querySelectorAll('.photo-card'));\n    const newCardsHTML = renderImageCards(newImages);\n\n    gallery.insertAdjacentHTML('beforeend', newCardsHTML);\n\n    const lastNewImage = currentImages.length;\n    const newImageCards = Array.from(gallery.querySelectorAll('.photo-card')).slice(lastNewImage);\n    \n    newImageCards[0].scrollIntoView({\n      behavior: 'smooth',\n      block: 'start',\n    });\n  } else {\n    loadMoreBtn.style.display = 'none';\n    alert(\"We're sorry, but you've reached the end of search results.\");\n  }\n};\nsearchForm.addEventListener('submit', handleFormSubmit);\nloadMoreBtn.addEventListener('click', handleLoadMoreClick);\n "],"names":["$85a5f86b715fe7db$var$searchForm","document","getElementById","$85a5f86b715fe7db$var$gallery","querySelector","$85a5f86b715fe7db$var$loadMoreBtn","$85a5f86b715fe7db$var$currentPage","$85a5f86b715fe7db$var$searchQuery","$85a5f86b715fe7db$var$fetchImages","async","query","page","response","fetch","ok","Error","json","error","console","$85a5f86b715fe7db$var$renderImageCards","images","cardsHTML","map","image","webformatURL","tags","likes","views","comments","downloads","join","innerHTML","addEventListener","event","preventDefault","target","searchQuery","value","trim","data","hits","length","style","display","alert","newImages","currentImages","Array","from","querySelectorAll","newCardsHTML","insertAdjacentHTML","lastNewImage","slice","scrollIntoView","behavior","block"],"version":3,"file":"index.a5a8decf.js.map"}